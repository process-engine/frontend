{"version":3,"sources":["../../src/helpers/Html.js"],"names":["path","require","bootstrapConfig","Html","props","assets","component","store","content","renderToString","head","rewind","config","themePath","themeName","resolve","messageBusProvider","messageBus","messageBusEndPointName","base","toComponent","title","meta","link","script","Object","keys","styles","map","style","key","length","__html","routedComponentsPath","AppComponentName","_style","getState","javascript","main","propTypes","object","node","exports","module"],"mappings":"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","file":"Html.js","sourcesContent":["'use strict';\n\nimport React, { Component, PropTypes } from 'react';\nimport ReactDOM from 'react-dom/server';\nimport serialize from 'serialize-javascript';\nimport Helmet from 'react-helmet';\n\n/**\n * Wrapper component containing HTML metadata and boilerplate tags.\n * Used in server-side code only to wrap the string output of the\n * rendered route component.\n *\n * The only thing this component doesn't (and can't) include is the\n * HTML doctype declaration, which is added to the rendered output\n * by the server.js file.\n */\n\n\nconst path = require('path');\n\nlet bootstrapConfig = null;\n\nclass Html extends Component {\n    static propTypes = {\n        assets: PropTypes.object,\n        component: PropTypes.node,\n        store: PropTypes.object\n    };\n\n    render() {\n        const { assets, component, store } = this.props;\n        const content = component ? ReactDOM.renderToString(component) : '';\n        const head = Helmet.rewind();\n\n        if (this.props.config && this.props.config.themePath && this.props.config.themeName) {\n            bootstrapConfig = require(path.resolve(this.props.config.themePath, this.props.config.themeName, 'bootstrap_config.js'));\n        }\n\n        let messageBusProvider = null;\n        if (this.props.config.messageBus) {\n            messageBusProvider = (<script src={\"/\" + (this.props.config.messageBusEndPointName || 'faye') + \"/client.js\"} charSet=\"UTF-8\"/>);\n        }\n        return (\n        <html lang=\"en-us\">\n        <head>\n            {head.base.toComponent()}\n            {head.title.toComponent()}\n            {head.meta.toComponent()}\n            {head.link.toComponent()}\n            {head.script.toComponent()}\n\n            <link rel=\"stylesheet\" href=\"/vendor/bpmn-font/css/bpmn-embedded.css\" />\n            <link rel=\"shortcut icon\" href=\"/favicon.ico\"/>\n\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n            {/* styles (will be present only in production with webpack extract text plugin) */}\n            {Object.keys(assets.styles).map((style, key) =>\n            <link href={assets.styles[style]} key={key} media=\"screen, projection\" rel=\"stylesheet\" type=\"text/css\" charSet=\"UTF-8\"/>\n            )}\n\n            {/* (will be present only in development mode) */}\n            {/* outputs a <style/> tag with all bootstrap styles + App.scss + it could be CurrentPage.scss. */}\n            {/* can smoothen the initial style flash (flicker) on page load in development mode. */}\n            {/* ideally one could also include here the style for the current page (Home.scss, About.scss, etc) */}\n            {Object.keys(assets.styles).length === 0 ? <style dangerouslySetInnerHTML={{ __html: (bootstrapConfig ? bootstrapConfig : '') + require(path.resolve(this.props.config.routedComponentsPath, this.props.config.AppComponentName, this.props.config.AppComponentName + '.scss'))._style }}/> : null}\n        </head>\n        <body>\n        <div id=\"content\" dangerouslySetInnerHTML={{ __html: content }}/>\n        <script dangerouslySetInnerHTML={{ __html: `window.__data=${serialize(store.getState())};` }} charSet=\"UTF-8\"/>\n        {messageBusProvider}\n        <script src={assets.javascript.main} charSet=\"UTF-8\"/>\n        </body>\n        </html>\n        );\n    }\n}\n\nexports = module.exports = Html;\n"]}